version: '3'

services:

  nginx-waf:
    build:
      context: .
      dockerfile: v3-nginx/Dockerfile
    environment:
      BACKEND: http://app-frontend
      PORT: "8080"
      SSL_PORT: "4443"
      # DNS_SERVER: "8.8.8.8"
      METRICS_ALLOW_FROM: all
    ports:
      - "8081:8080"
      - "4444:4443"
    networks:
      - frontend # ensures this can only see 'app-frontend'
    depends_on:
      - app-frontend

  app-frontend:
    image: echo/nginx-app-server
    build: 
      context: ./echo-fed-server
    ports:
      - "80"      # only expose the container-port
    depends_on:
      - app-backend
    networks:
      - frontend  # can see itself, as well as ...
      - backend   # the 'app-backend' service

  app-backend:
    image: echo/spring-resource-server
    environment:
      - JASYPT_ENCRYPT_KEY
    build:
      context: ./echo-webapp-resource
    networks:
      - backend   # can see itself, and ...
      - database  # the app-database service

  app-database:
    image: mysql:5.7.32
    volumes:
      - /etc/mysql-custom:/etc/mysql/conf.d
      - /var/lib/mysql:/var/lib/mysql
    ports:
      - "3306"   # only expose container port.
    networks:
      - database

networks:
  frontend:
  backend:
  database:

# example of command used to start mysql for the echo app
# docker run --name apildb2 -v /var/lib/mysql:/var/lib/mysql -v /etc/mysql-custom:/etc/mysql/conf.d -p 3306:3306 mysql:5.7.32